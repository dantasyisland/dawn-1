{% style %}
  .section--{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section--{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .box {
    height: 200px;
    background-color: #f2f2f2;
    border: 1px solid #ccc;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;

  }

  .box:hover {
    background-color: #e6e6e6;
  }


  .button-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    margin-bottom: 20px;
  }

  .button {}

.aspect-ratio-box {
  position: relative;
  width: 100%;
  padding-top: 100%;
  /* This creates a 1:1 aspect ratio */
  overflow: hidden;
}

.responsive-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  /* This will crop the image to fill the square */
}

{% endstyle %}
<div class="page-width">

  <div class="color--{{ section.settings.color_scheme }} gradient section--{{section.id}}--padding">
    <div class="mastering-grid">
      <h1>Mastering Grid

      </h1>


      {% comment %} Image logic {% endcomment %}
      {% comment %} WORKING OFF OF MAIN-PRODUCT {% endcomment %}
      <div class="button-container">
        <button class="button button">Button 1</button>
        <button class="button button--secondary">Button 2</button>
        <button class="button button--tertiary">Button 3</button>
      </div>
      <!-- For a 3-column grid -->
      <div class="grid grid--3-col">
        <div class="grid__item box">3 Column Grid: Column 1 content</div>
        <div class="grid__item box">3 Column Grid: Column 2 content</div>
        <div class="grid__item box">3 Column Grid: Column 3 content</div>
      </div>


      <!-- For a 2-column grid that becomes 4 columns on tablet and larger -->
      <div class="grid grid--2-col">
        <div class="grid__item box">2 Column Grid: Column 1 content</div>
        <div class="grid__item box">2 Column Grid: Column 2 content</div>
        <div class="grid__item box">2 Column Grid: Column 3 content</div>
        <div class="grid__item box">2 Column 4 content</div>
      </div>

      <!-- For a full-width slider on mobile that becomes a 3-column grid on desktop -->
      <div class="grid grid--1-col grid--3-col-desktop slider slider--mobile">
        <div class="grid__item box slider__slide--full-width">Slide 1 content</div>
        <div class="grid__item box slider__slide--full-width">Slide 2 content</div>
        <div class="grid__item box slider__slide--full-width">Slide 3 content</div>
      </div>
    </div>

  </div>
</div>
{% schema %}
  {
    "name": "t:sections.mastering-grid.name",
    "settings": [
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
    ]
  }
{% endschema %}